//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SdAsm.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class SdAsmLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, Dot=7, LeftParen=8, RightParen=9, 
		LeftBracket=10, RightBracket=11, Less=12, LessEqual=13, Greater=14, GreaterEqual=15, 
		Equal=16, NotEqual=17, Minus=18, Plus=19, Star=20, Div=21, Mod=22, AndAnd=23, 
		OrOr=24, Not=25, LeftShift=26, RightShift=27, And=28, Or=29, Caret=30, 
		Tilde=31, Assign=32, PlusAssign=33, MinusAssign=34, StarAssign=35, DivAssign=36, 
		ModAssign=37, LeftShiftAssign=38, RightShiftAssign=39, AndAssign=40, OrAssign=41, 
		XorAssign=42, TildeAssign=43, ORG=44, Question=45, SingleQuote=46, Quote=47, 
		Colon=48, Comma=49, Pound=50, AT=51, CRLF=52, SegmentType=53, DataType=54, 
		Number=55, Identifier=56, StringLiteral=57, WS=58, COMMENT=59;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "Dot", "LeftParen", "RightParen", 
		"LeftBracket", "RightBracket", "Less", "LessEqual", "Greater", "GreaterEqual", 
		"Equal", "NotEqual", "Minus", "Plus", "Star", "Div", "Mod", "AndAnd", 
		"OrOr", "Not", "LeftShift", "RightShift", "And", "Or", "Caret", "Tilde", 
		"Assign", "PlusAssign", "MinusAssign", "StarAssign", "DivAssign", "ModAssign", 
		"LeftShiftAssign", "RightShiftAssign", "AndAssign", "OrAssign", "XorAssign", 
		"TildeAssign", "ORG", "Question", "SingleQuote", "Quote", "Colon", "Comma", 
		"Pound", "AT", "CRLF", "SegmentType", "DataType", "Number", "Identifier", 
		"StringLiteral", "CCharSequence", "CChar", "EscapeSequence", "SimpleEscapeSequence", 
		"OctalEscapeSequence", "HexadecimalEscapeSequence", "UniversalCharacterName", 
		"EncodingPrefix", "SCharSequence", "SChar", "HexQuad", "HexadecimalDigit", 
		"OctalDigit", "WS", "COMMENT"
	};


	public SdAsmLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SdAsmLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'$'", "'.if'", "'.else'", "'.endif'", "'\\'", "'=:'", "'.'", "'('", 
		"')'", "'['", "']'", "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", "'-'", 
		"'+'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'!'", "'<<'", "'>>'", "'&'", 
		"'|'", "'^'", "'~'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'<<='", 
		"'>>='", "'&='", "'|='", "'^='", "'~='", "'org'", "'?'", "'''", "'\"'", 
		"':'", "','", "'#'", "'@'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "Dot", "LeftParen", "RightParen", 
		"LeftBracket", "RightBracket", "Less", "LessEqual", "Greater", "GreaterEqual", 
		"Equal", "NotEqual", "Minus", "Plus", "Star", "Div", "Mod", "AndAnd", 
		"OrOr", "Not", "LeftShift", "RightShift", "And", "Or", "Caret", "Tilde", 
		"Assign", "PlusAssign", "MinusAssign", "StarAssign", "DivAssign", "ModAssign", 
		"LeftShiftAssign", "RightShiftAssign", "AndAssign", "OrAssign", "XorAssign", 
		"TildeAssign", "ORG", "Question", "SingleQuote", "Quote", "Colon", "Comma", 
		"Pound", "AT", "CRLF", "SegmentType", "DataType", "Number", "Identifier", 
		"StringLiteral", "WS", "COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SdAsm.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static SdAsmLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,59,466,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,
		1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,
		9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,
		1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
		1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,
		1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,
		1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,
		1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,
		1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,
		1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,3,51,284,8,51,1,51,1,51,1,52,1,
		52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,
		52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,310,8,52,1,53,1,53,1,53,1,53,1,53,
		1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,329,8,
		53,1,54,3,54,332,8,54,1,54,3,54,335,8,54,1,54,4,54,338,8,54,11,54,12,54,
		339,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,3,54,352,8,54,1,
		54,4,54,355,8,54,11,54,12,54,356,3,54,359,8,54,1,55,1,55,5,55,363,8,55,
		10,55,12,55,366,9,55,1,56,3,56,369,8,56,1,56,1,56,3,56,373,8,56,1,56,1,
		56,1,57,4,57,378,8,57,11,57,12,57,379,1,58,1,58,3,58,384,8,58,1,59,1,59,
		1,59,1,59,3,59,390,8,59,1,60,1,60,1,60,1,61,1,61,1,61,3,61,398,8,61,1,
		61,3,61,401,8,61,1,62,1,62,1,62,1,62,4,62,407,8,62,11,62,12,62,408,1,63,
		1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,3,63,421,8,63,1,64,1,64,1,
		64,3,64,426,8,64,1,65,4,65,429,8,65,11,65,12,65,430,1,66,1,66,1,66,1,66,
		1,66,1,66,1,66,3,66,440,8,66,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,69,1,
		69,1,70,4,70,452,8,70,11,70,12,70,453,1,70,1,70,1,71,1,71,5,71,460,8,71,
		10,71,12,71,463,9,71,1,71,1,71,0,0,72,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
		8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
		20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
		32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
		44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,
		55,111,56,113,57,115,0,117,0,119,0,121,0,123,0,125,0,127,0,129,0,131,0,
		133,0,135,0,137,0,139,0,141,58,143,59,1,0,12,1,0,48,57,12,0,66,66,68,68,
		72,72,79,79,81,81,88,88,98,98,100,100,104,104,111,111,113,113,120,120,
		4,0,36,36,65,90,95,95,97,122,5,0,36,36,48,57,65,90,95,95,97,122,4,0,10,
		10,13,13,39,39,92,92,10,0,34,34,39,39,63,63,92,92,97,98,102,102,110,110,
		114,114,116,116,118,118,3,0,76,76,85,85,117,117,4,0,10,10,13,13,34,34,
		92,92,3,0,48,57,65,70,97,102,1,0,48,55,2,0,9,9,32,32,2,0,10,10,13,13,489,
		0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
		0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
		1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
		0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,1,145,1,0,0,
		0,3,147,1,0,0,0,5,151,1,0,0,0,7,157,1,0,0,0,9,164,1,0,0,0,11,166,1,0,0,
		0,13,169,1,0,0,0,15,171,1,0,0,0,17,173,1,0,0,0,19,175,1,0,0,0,21,177,1,
		0,0,0,23,179,1,0,0,0,25,181,1,0,0,0,27,184,1,0,0,0,29,186,1,0,0,0,31,189,
		1,0,0,0,33,192,1,0,0,0,35,195,1,0,0,0,37,197,1,0,0,0,39,199,1,0,0,0,41,
		201,1,0,0,0,43,203,1,0,0,0,45,205,1,0,0,0,47,208,1,0,0,0,49,211,1,0,0,
		0,51,213,1,0,0,0,53,216,1,0,0,0,55,219,1,0,0,0,57,221,1,0,0,0,59,223,1,
		0,0,0,61,225,1,0,0,0,63,227,1,0,0,0,65,229,1,0,0,0,67,232,1,0,0,0,69,235,
		1,0,0,0,71,238,1,0,0,0,73,241,1,0,0,0,75,244,1,0,0,0,77,248,1,0,0,0,79,
		252,1,0,0,0,81,255,1,0,0,0,83,258,1,0,0,0,85,261,1,0,0,0,87,264,1,0,0,
		0,89,268,1,0,0,0,91,270,1,0,0,0,93,272,1,0,0,0,95,274,1,0,0,0,97,276,1,
		0,0,0,99,278,1,0,0,0,101,280,1,0,0,0,103,283,1,0,0,0,105,309,1,0,0,0,107,
		328,1,0,0,0,109,331,1,0,0,0,111,360,1,0,0,0,113,368,1,0,0,0,115,377,1,
		0,0,0,117,383,1,0,0,0,119,389,1,0,0,0,121,391,1,0,0,0,123,394,1,0,0,0,
		125,402,1,0,0,0,127,420,1,0,0,0,129,425,1,0,0,0,131,428,1,0,0,0,133,439,
		1,0,0,0,135,441,1,0,0,0,137,446,1,0,0,0,139,448,1,0,0,0,141,451,1,0,0,
		0,143,457,1,0,0,0,145,146,5,36,0,0,146,2,1,0,0,0,147,148,5,46,0,0,148,
		149,5,105,0,0,149,150,5,102,0,0,150,4,1,0,0,0,151,152,5,46,0,0,152,153,
		5,101,0,0,153,154,5,108,0,0,154,155,5,115,0,0,155,156,5,101,0,0,156,6,
		1,0,0,0,157,158,5,46,0,0,158,159,5,101,0,0,159,160,5,110,0,0,160,161,5,
		100,0,0,161,162,5,105,0,0,162,163,5,102,0,0,163,8,1,0,0,0,164,165,5,92,
		0,0,165,10,1,0,0,0,166,167,5,61,0,0,167,168,5,58,0,0,168,12,1,0,0,0,169,
		170,5,46,0,0,170,14,1,0,0,0,171,172,5,40,0,0,172,16,1,0,0,0,173,174,5,
		41,0,0,174,18,1,0,0,0,175,176,5,91,0,0,176,20,1,0,0,0,177,178,5,93,0,0,
		178,22,1,0,0,0,179,180,5,60,0,0,180,24,1,0,0,0,181,182,5,60,0,0,182,183,
		5,61,0,0,183,26,1,0,0,0,184,185,5,62,0,0,185,28,1,0,0,0,186,187,5,62,0,
		0,187,188,5,61,0,0,188,30,1,0,0,0,189,190,5,61,0,0,190,191,5,61,0,0,191,
		32,1,0,0,0,192,193,5,33,0,0,193,194,5,61,0,0,194,34,1,0,0,0,195,196,5,
		45,0,0,196,36,1,0,0,0,197,198,5,43,0,0,198,38,1,0,0,0,199,200,5,42,0,0,
		200,40,1,0,0,0,201,202,5,47,0,0,202,42,1,0,0,0,203,204,5,37,0,0,204,44,
		1,0,0,0,205,206,5,38,0,0,206,207,5,38,0,0,207,46,1,0,0,0,208,209,5,124,
		0,0,209,210,5,124,0,0,210,48,1,0,0,0,211,212,5,33,0,0,212,50,1,0,0,0,213,
		214,5,60,0,0,214,215,5,60,0,0,215,52,1,0,0,0,216,217,5,62,0,0,217,218,
		5,62,0,0,218,54,1,0,0,0,219,220,5,38,0,0,220,56,1,0,0,0,221,222,5,124,
		0,0,222,58,1,0,0,0,223,224,5,94,0,0,224,60,1,0,0,0,225,226,5,126,0,0,226,
		62,1,0,0,0,227,228,5,61,0,0,228,64,1,0,0,0,229,230,5,43,0,0,230,231,5,
		61,0,0,231,66,1,0,0,0,232,233,5,45,0,0,233,234,5,61,0,0,234,68,1,0,0,0,
		235,236,5,42,0,0,236,237,5,61,0,0,237,70,1,0,0,0,238,239,5,47,0,0,239,
		240,5,61,0,0,240,72,1,0,0,0,241,242,5,37,0,0,242,243,5,61,0,0,243,74,1,
		0,0,0,244,245,5,60,0,0,245,246,5,60,0,0,246,247,5,61,0,0,247,76,1,0,0,
		0,248,249,5,62,0,0,249,250,5,62,0,0,250,251,5,61,0,0,251,78,1,0,0,0,252,
		253,5,38,0,0,253,254,5,61,0,0,254,80,1,0,0,0,255,256,5,124,0,0,256,257,
		5,61,0,0,257,82,1,0,0,0,258,259,5,94,0,0,259,260,5,61,0,0,260,84,1,0,0,
		0,261,262,5,126,0,0,262,263,5,61,0,0,263,86,1,0,0,0,264,265,5,111,0,0,
		265,266,5,114,0,0,266,267,5,103,0,0,267,88,1,0,0,0,268,269,5,63,0,0,269,
		90,1,0,0,0,270,271,5,39,0,0,271,92,1,0,0,0,272,273,5,34,0,0,273,94,1,0,
		0,0,274,275,5,58,0,0,275,96,1,0,0,0,276,277,5,44,0,0,277,98,1,0,0,0,278,
		279,5,35,0,0,279,100,1,0,0,0,280,281,5,64,0,0,281,102,1,0,0,0,282,284,
		5,13,0,0,283,282,1,0,0,0,283,284,1,0,0,0,284,285,1,0,0,0,285,286,5,10,
		0,0,286,104,1,0,0,0,287,288,5,109,0,0,288,289,5,111,0,0,289,290,5,100,
		0,0,290,291,5,117,0,0,291,292,5,108,0,0,292,310,5,101,0,0,293,294,5,111,
		0,0,294,295,5,112,0,0,295,296,5,116,0,0,296,297,5,115,0,0,297,298,5,100,
		0,0,298,299,5,99,0,0,299,310,5,99,0,0,300,301,5,103,0,0,301,302,5,108,
		0,0,302,303,5,111,0,0,303,304,5,98,0,0,304,310,5,108,0,0,305,306,5,97,
		0,0,306,307,5,114,0,0,307,308,5,101,0,0,308,310,5,97,0,0,309,287,1,0,0,
		0,309,293,1,0,0,0,309,300,1,0,0,0,309,305,1,0,0,0,310,106,1,0,0,0,311,
		312,5,97,0,0,312,313,5,115,0,0,313,314,5,99,0,0,314,315,5,105,0,0,315,
		329,5,105,0,0,316,317,5,98,0,0,317,318,5,121,0,0,318,319,5,116,0,0,319,
		329,5,101,0,0,320,321,5,100,0,0,321,329,5,98,0,0,322,323,5,100,0,0,323,
		329,5,115,0,0,324,325,5,100,0,0,325,329,5,119,0,0,326,327,5,100,0,0,327,
		329,5,100,0,0,328,311,1,0,0,0,328,316,1,0,0,0,328,320,1,0,0,0,328,322,
		1,0,0,0,328,324,1,0,0,0,328,326,1,0,0,0,329,108,1,0,0,0,330,332,5,35,0,
		0,331,330,1,0,0,0,331,332,1,0,0,0,332,334,1,0,0,0,333,335,5,45,0,0,334,
		333,1,0,0,0,334,335,1,0,0,0,335,358,1,0,0,0,336,338,7,0,0,0,337,336,1,
		0,0,0,338,339,1,0,0,0,339,337,1,0,0,0,339,340,1,0,0,0,340,359,1,0,0,0,
		341,342,5,48,0,0,342,352,7,1,0,0,343,344,5,36,0,0,344,352,5,37,0,0,345,
		346,5,36,0,0,346,352,5,38,0,0,347,348,5,36,0,0,348,352,5,35,0,0,349,350,
		5,36,0,0,350,352,5,36,0,0,351,341,1,0,0,0,351,343,1,0,0,0,351,345,1,0,
		0,0,351,347,1,0,0,0,351,349,1,0,0,0,352,354,1,0,0,0,353,355,3,137,68,0,
		354,353,1,0,0,0,355,356,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,359,
		1,0,0,0,358,337,1,0,0,0,358,351,1,0,0,0,359,110,1,0,0,0,360,364,7,2,0,
		0,361,363,7,3,0,0,362,361,1,0,0,0,363,366,1,0,0,0,364,362,1,0,0,0,364,
		365,1,0,0,0,365,112,1,0,0,0,366,364,1,0,0,0,367,369,3,129,64,0,368,367,
		1,0,0,0,368,369,1,0,0,0,369,370,1,0,0,0,370,372,5,34,0,0,371,373,3,131,
		65,0,372,371,1,0,0,0,372,373,1,0,0,0,373,374,1,0,0,0,374,375,5,34,0,0,
		375,114,1,0,0,0,376,378,3,117,58,0,377,376,1,0,0,0,378,379,1,0,0,0,379,
		377,1,0,0,0,379,380,1,0,0,0,380,116,1,0,0,0,381,384,8,4,0,0,382,384,3,
		119,59,0,383,381,1,0,0,0,383,382,1,0,0,0,384,118,1,0,0,0,385,390,3,121,
		60,0,386,390,3,123,61,0,387,390,3,125,62,0,388,390,3,127,63,0,389,385,
		1,0,0,0,389,386,1,0,0,0,389,387,1,0,0,0,389,388,1,0,0,0,390,120,1,0,0,
		0,391,392,5,92,0,0,392,393,7,5,0,0,393,122,1,0,0,0,394,395,5,92,0,0,395,
		397,3,139,69,0,396,398,3,139,69,0,397,396,1,0,0,0,397,398,1,0,0,0,398,
		400,1,0,0,0,399,401,3,139,69,0,400,399,1,0,0,0,400,401,1,0,0,0,401,124,
		1,0,0,0,402,403,5,92,0,0,403,404,5,120,0,0,404,406,1,0,0,0,405,407,3,137,
		68,0,406,405,1,0,0,0,407,408,1,0,0,0,408,406,1,0,0,0,408,409,1,0,0,0,409,
		126,1,0,0,0,410,411,5,92,0,0,411,412,5,117,0,0,412,413,1,0,0,0,413,421,
		3,135,67,0,414,415,5,92,0,0,415,416,5,85,0,0,416,417,1,0,0,0,417,418,3,
		135,67,0,418,419,3,135,67,0,419,421,1,0,0,0,420,410,1,0,0,0,420,414,1,
		0,0,0,421,128,1,0,0,0,422,423,5,117,0,0,423,426,5,56,0,0,424,426,7,6,0,
		0,425,422,1,0,0,0,425,424,1,0,0,0,426,130,1,0,0,0,427,429,3,133,66,0,428,
		427,1,0,0,0,429,430,1,0,0,0,430,428,1,0,0,0,430,431,1,0,0,0,431,132,1,
		0,0,0,432,440,8,7,0,0,433,440,3,119,59,0,434,435,5,92,0,0,435,440,5,10,
		0,0,436,437,5,92,0,0,437,438,5,13,0,0,438,440,5,10,0,0,439,432,1,0,0,0,
		439,433,1,0,0,0,439,434,1,0,0,0,439,436,1,0,0,0,440,134,1,0,0,0,441,442,
		3,137,68,0,442,443,3,137,68,0,443,444,3,137,68,0,444,445,3,137,68,0,445,
		136,1,0,0,0,446,447,7,8,0,0,447,138,1,0,0,0,448,449,7,9,0,0,449,140,1,
		0,0,0,450,452,7,10,0,0,451,450,1,0,0,0,452,453,1,0,0,0,453,451,1,0,0,0,
		453,454,1,0,0,0,454,455,1,0,0,0,455,456,6,70,0,0,456,142,1,0,0,0,457,461,
		5,59,0,0,458,460,8,11,0,0,459,458,1,0,0,0,460,463,1,0,0,0,461,459,1,0,
		0,0,461,462,1,0,0,0,462,464,1,0,0,0,463,461,1,0,0,0,464,465,6,71,0,0,465,
		144,1,0,0,0,25,0,283,309,328,331,334,339,351,356,358,364,368,372,379,383,
		389,397,400,408,420,425,430,439,453,461,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
