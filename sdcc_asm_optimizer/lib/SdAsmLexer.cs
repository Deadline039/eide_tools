//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./SdAsm.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public partial class SdAsmLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, Dot=13, LeftParen=14, RightParen=15, LeftBracket=16, 
		RightBracket=17, Less=18, LessEqual=19, Greater=20, GreaterEqual=21, Equal=22, 
		NotEqual=23, Minus=24, Plus=25, Star=26, Div=27, Mod=28, AndAnd=29, OrOr=30, 
		Not=31, LeftShift=32, RightShift=33, And=34, Or=35, Caret=36, Tilde=37, 
		Assign=38, PlusAssign=39, MinusAssign=40, StarAssign=41, DivAssign=42, 
		ModAssign=43, LeftShiftAssign=44, RightShiftAssign=45, AndAssign=46, OrAssign=47, 
		XorAssign=48, TildeAssign=49, ORG=50, Question=51, SingleQuote=52, Quote=53, 
		Colon=54, Comma=55, Pound=56, AT=57, CRLF=58, SegmentType=59, DataType=60, 
		Number=61, Identifier=62, StringLiteral=63, WS=64, COMMENT=65;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "Dot", "LeftParen", "RightParen", "LeftBracket", 
		"RightBracket", "Less", "LessEqual", "Greater", "GreaterEqual", "Equal", 
		"NotEqual", "Minus", "Plus", "Star", "Div", "Mod", "AndAnd", "OrOr", "Not", 
		"LeftShift", "RightShift", "And", "Or", "Caret", "Tilde", "Assign", "PlusAssign", 
		"MinusAssign", "StarAssign", "DivAssign", "ModAssign", "LeftShiftAssign", 
		"RightShiftAssign", "AndAssign", "OrAssign", "XorAssign", "TildeAssign", 
		"ORG", "Question", "SingleQuote", "Quote", "Colon", "Comma", "Pound", 
		"AT", "CRLF", "SegmentType", "DataType", "Number", "Identifier", "StringLiteral", 
		"CCharSequence", "CChar", "EscapeSequence", "SimpleEscapeSequence", "OctalEscapeSequence", 
		"HexadecimalEscapeSequence", "UniversalCharacterName", "EncodingPrefix", 
		"SCharSequence", "SChar", "HexQuad", "HexadecimalDigit", "OctalDigit", 
		"WS", "COMMENT"
	};


	public SdAsmLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SdAsmLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'16bit'", "'24bit'", "'32bit'", "'module'", "'optsdcc'", "'$'", 
		"'.if'", "'.ifdef'", "'.else'", "'.endif'", "'\\'", "'=:'", "'.'", "'('", 
		"')'", "'['", "']'", "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", "'-'", 
		"'+'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'!'", "'<<'", "'>>'", "'&'", 
		"'|'", "'^'", "'~'", "'='", "'+='", "'-='", "'*='", "'/='", "'%='", "'<<='", 
		"'>>='", "'&='", "'|='", "'^='", "'~='", "'org'", "'?'", "'''", "'\"'", 
		"':'", "','", "'#'", "'@'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "Dot", "LeftParen", "RightParen", "LeftBracket", "RightBracket", 
		"Less", "LessEqual", "Greater", "GreaterEqual", "Equal", "NotEqual", "Minus", 
		"Plus", "Star", "Div", "Mod", "AndAnd", "OrOr", "Not", "LeftShift", "RightShift", 
		"And", "Or", "Caret", "Tilde", "Assign", "PlusAssign", "MinusAssign", 
		"StarAssign", "DivAssign", "ModAssign", "LeftShiftAssign", "RightShiftAssign", 
		"AndAssign", "OrAssign", "XorAssign", "TildeAssign", "ORG", "Question", 
		"SingleQuote", "Quote", "Colon", "Comma", "Pound", "AT", "CRLF", "SegmentType", 
		"DataType", "Number", "Identifier", "StringLiteral", "WS", "COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SdAsm.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static SdAsmLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,65,514,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,
		2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,
		1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
		8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,
		1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,19,1,19,
		1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
		1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,31,
		1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,
		1,37,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,
		1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,46,
		1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,50,
		1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,3,57,
		336,8,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,
		58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,3,58,358,8,58,1,59,1,59,1,59,1,59,
		1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,
		377,8,59,1,60,3,60,380,8,60,1,60,3,60,383,8,60,1,60,4,60,386,8,60,11,60,
		12,60,387,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,3,60,400,8,
		60,1,60,4,60,403,8,60,11,60,12,60,404,3,60,407,8,60,1,61,1,61,5,61,411,
		8,61,10,61,12,61,414,9,61,1,62,3,62,417,8,62,1,62,1,62,3,62,421,8,62,1,
		62,1,62,1,63,4,63,426,8,63,11,63,12,63,427,1,64,1,64,3,64,432,8,64,1,65,
		1,65,1,65,1,65,3,65,438,8,65,1,66,1,66,1,66,1,67,1,67,1,67,3,67,446,8,
		67,1,67,3,67,449,8,67,1,68,1,68,1,68,1,68,4,68,455,8,68,11,68,12,68,456,
		1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,3,69,469,8,69,1,70,1,
		70,1,70,3,70,474,8,70,1,71,4,71,477,8,71,11,71,12,71,478,1,72,1,72,1,72,
		1,72,1,72,1,72,1,72,3,72,488,8,72,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,
		75,1,75,1,76,4,76,500,8,76,11,76,12,76,501,1,76,1,76,1,77,1,77,5,77,508,
		8,77,10,77,12,77,511,9,77,1,77,1,77,0,0,78,1,1,3,2,5,3,7,4,9,5,11,6,13,
		7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
		39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
		63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
		87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,
		109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,0,129,
		0,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,0,149,0,151,0,153,
		64,155,65,1,0,12,1,0,48,57,12,0,66,66,68,68,72,72,79,79,81,81,88,88,98,
		98,100,100,104,104,111,111,113,113,120,120,4,0,36,36,65,90,95,95,97,122,
		5,0,36,36,48,57,65,90,95,95,97,122,4,0,10,10,13,13,39,39,92,92,10,0,34,
		34,39,39,63,63,92,92,97,98,102,102,110,110,114,114,116,116,118,118,3,0,
		76,76,85,85,117,117,4,0,10,10,13,13,34,34,92,92,3,0,48,57,65,70,97,102,
		1,0,48,55,2,0,9,9,32,32,2,0,10,10,13,13,537,0,1,1,0,0,0,0,3,1,0,0,0,0,
		5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
		0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
		0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
		0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
		0,0,0,125,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,1,157,1,0,0,0,3,163,1,0,
		0,0,5,169,1,0,0,0,7,175,1,0,0,0,9,182,1,0,0,0,11,190,1,0,0,0,13,192,1,
		0,0,0,15,196,1,0,0,0,17,203,1,0,0,0,19,209,1,0,0,0,21,216,1,0,0,0,23,218,
		1,0,0,0,25,221,1,0,0,0,27,223,1,0,0,0,29,225,1,0,0,0,31,227,1,0,0,0,33,
		229,1,0,0,0,35,231,1,0,0,0,37,233,1,0,0,0,39,236,1,0,0,0,41,238,1,0,0,
		0,43,241,1,0,0,0,45,244,1,0,0,0,47,247,1,0,0,0,49,249,1,0,0,0,51,251,1,
		0,0,0,53,253,1,0,0,0,55,255,1,0,0,0,57,257,1,0,0,0,59,260,1,0,0,0,61,263,
		1,0,0,0,63,265,1,0,0,0,65,268,1,0,0,0,67,271,1,0,0,0,69,273,1,0,0,0,71,
		275,1,0,0,0,73,277,1,0,0,0,75,279,1,0,0,0,77,281,1,0,0,0,79,284,1,0,0,
		0,81,287,1,0,0,0,83,290,1,0,0,0,85,293,1,0,0,0,87,296,1,0,0,0,89,300,1,
		0,0,0,91,304,1,0,0,0,93,307,1,0,0,0,95,310,1,0,0,0,97,313,1,0,0,0,99,316,
		1,0,0,0,101,320,1,0,0,0,103,322,1,0,0,0,105,324,1,0,0,0,107,326,1,0,0,
		0,109,328,1,0,0,0,111,330,1,0,0,0,113,332,1,0,0,0,115,335,1,0,0,0,117,
		357,1,0,0,0,119,376,1,0,0,0,121,379,1,0,0,0,123,408,1,0,0,0,125,416,1,
		0,0,0,127,425,1,0,0,0,129,431,1,0,0,0,131,437,1,0,0,0,133,439,1,0,0,0,
		135,442,1,0,0,0,137,450,1,0,0,0,139,468,1,0,0,0,141,473,1,0,0,0,143,476,
		1,0,0,0,145,487,1,0,0,0,147,489,1,0,0,0,149,494,1,0,0,0,151,496,1,0,0,
		0,153,499,1,0,0,0,155,505,1,0,0,0,157,158,5,49,0,0,158,159,5,54,0,0,159,
		160,5,98,0,0,160,161,5,105,0,0,161,162,5,116,0,0,162,2,1,0,0,0,163,164,
		5,50,0,0,164,165,5,52,0,0,165,166,5,98,0,0,166,167,5,105,0,0,167,168,5,
		116,0,0,168,4,1,0,0,0,169,170,5,51,0,0,170,171,5,50,0,0,171,172,5,98,0,
		0,172,173,5,105,0,0,173,174,5,116,0,0,174,6,1,0,0,0,175,176,5,109,0,0,
		176,177,5,111,0,0,177,178,5,100,0,0,178,179,5,117,0,0,179,180,5,108,0,
		0,180,181,5,101,0,0,181,8,1,0,0,0,182,183,5,111,0,0,183,184,5,112,0,0,
		184,185,5,116,0,0,185,186,5,115,0,0,186,187,5,100,0,0,187,188,5,99,0,0,
		188,189,5,99,0,0,189,10,1,0,0,0,190,191,5,36,0,0,191,12,1,0,0,0,192,193,
		5,46,0,0,193,194,5,105,0,0,194,195,5,102,0,0,195,14,1,0,0,0,196,197,5,
		46,0,0,197,198,5,105,0,0,198,199,5,102,0,0,199,200,5,100,0,0,200,201,5,
		101,0,0,201,202,5,102,0,0,202,16,1,0,0,0,203,204,5,46,0,0,204,205,5,101,
		0,0,205,206,5,108,0,0,206,207,5,115,0,0,207,208,5,101,0,0,208,18,1,0,0,
		0,209,210,5,46,0,0,210,211,5,101,0,0,211,212,5,110,0,0,212,213,5,100,0,
		0,213,214,5,105,0,0,214,215,5,102,0,0,215,20,1,0,0,0,216,217,5,92,0,0,
		217,22,1,0,0,0,218,219,5,61,0,0,219,220,5,58,0,0,220,24,1,0,0,0,221,222,
		5,46,0,0,222,26,1,0,0,0,223,224,5,40,0,0,224,28,1,0,0,0,225,226,5,41,0,
		0,226,30,1,0,0,0,227,228,5,91,0,0,228,32,1,0,0,0,229,230,5,93,0,0,230,
		34,1,0,0,0,231,232,5,60,0,0,232,36,1,0,0,0,233,234,5,60,0,0,234,235,5,
		61,0,0,235,38,1,0,0,0,236,237,5,62,0,0,237,40,1,0,0,0,238,239,5,62,0,0,
		239,240,5,61,0,0,240,42,1,0,0,0,241,242,5,61,0,0,242,243,5,61,0,0,243,
		44,1,0,0,0,244,245,5,33,0,0,245,246,5,61,0,0,246,46,1,0,0,0,247,248,5,
		45,0,0,248,48,1,0,0,0,249,250,5,43,0,0,250,50,1,0,0,0,251,252,5,42,0,0,
		252,52,1,0,0,0,253,254,5,47,0,0,254,54,1,0,0,0,255,256,5,37,0,0,256,56,
		1,0,0,0,257,258,5,38,0,0,258,259,5,38,0,0,259,58,1,0,0,0,260,261,5,124,
		0,0,261,262,5,124,0,0,262,60,1,0,0,0,263,264,5,33,0,0,264,62,1,0,0,0,265,
		266,5,60,0,0,266,267,5,60,0,0,267,64,1,0,0,0,268,269,5,62,0,0,269,270,
		5,62,0,0,270,66,1,0,0,0,271,272,5,38,0,0,272,68,1,0,0,0,273,274,5,124,
		0,0,274,70,1,0,0,0,275,276,5,94,0,0,276,72,1,0,0,0,277,278,5,126,0,0,278,
		74,1,0,0,0,279,280,5,61,0,0,280,76,1,0,0,0,281,282,5,43,0,0,282,283,5,
		61,0,0,283,78,1,0,0,0,284,285,5,45,0,0,285,286,5,61,0,0,286,80,1,0,0,0,
		287,288,5,42,0,0,288,289,5,61,0,0,289,82,1,0,0,0,290,291,5,47,0,0,291,
		292,5,61,0,0,292,84,1,0,0,0,293,294,5,37,0,0,294,295,5,61,0,0,295,86,1,
		0,0,0,296,297,5,60,0,0,297,298,5,60,0,0,298,299,5,61,0,0,299,88,1,0,0,
		0,300,301,5,62,0,0,301,302,5,62,0,0,302,303,5,61,0,0,303,90,1,0,0,0,304,
		305,5,38,0,0,305,306,5,61,0,0,306,92,1,0,0,0,307,308,5,124,0,0,308,309,
		5,61,0,0,309,94,1,0,0,0,310,311,5,94,0,0,311,312,5,61,0,0,312,96,1,0,0,
		0,313,314,5,126,0,0,314,315,5,61,0,0,315,98,1,0,0,0,316,317,5,111,0,0,
		317,318,5,114,0,0,318,319,5,103,0,0,319,100,1,0,0,0,320,321,5,63,0,0,321,
		102,1,0,0,0,322,323,5,39,0,0,323,104,1,0,0,0,324,325,5,34,0,0,325,106,
		1,0,0,0,326,327,5,58,0,0,327,108,1,0,0,0,328,329,5,44,0,0,329,110,1,0,
		0,0,330,331,5,35,0,0,331,112,1,0,0,0,332,333,5,64,0,0,333,114,1,0,0,0,
		334,336,5,13,0,0,335,334,1,0,0,0,335,336,1,0,0,0,336,337,1,0,0,0,337,338,
		5,10,0,0,338,116,1,0,0,0,339,340,5,103,0,0,340,341,5,108,0,0,341,342,5,
		111,0,0,342,343,5,98,0,0,343,358,5,108,0,0,344,345,5,97,0,0,345,346,5,
		114,0,0,346,347,5,101,0,0,347,358,5,97,0,0,348,349,5,108,0,0,349,350,5,
		111,0,0,350,351,5,99,0,0,351,352,5,97,0,0,352,358,5,108,0,0,353,354,5,
		98,0,0,354,355,5,97,0,0,355,356,5,110,0,0,356,358,5,107,0,0,357,339,1,
		0,0,0,357,344,1,0,0,0,357,348,1,0,0,0,357,353,1,0,0,0,358,118,1,0,0,0,
		359,360,5,97,0,0,360,361,5,115,0,0,361,362,5,99,0,0,362,363,5,105,0,0,
		363,377,5,105,0,0,364,365,5,98,0,0,365,366,5,121,0,0,366,367,5,116,0,0,
		367,377,5,101,0,0,368,369,5,100,0,0,369,377,5,98,0,0,370,371,5,100,0,0,
		371,377,5,115,0,0,372,373,5,100,0,0,373,377,5,119,0,0,374,375,5,100,0,
		0,375,377,5,100,0,0,376,359,1,0,0,0,376,364,1,0,0,0,376,368,1,0,0,0,376,
		370,1,0,0,0,376,372,1,0,0,0,376,374,1,0,0,0,377,120,1,0,0,0,378,380,5,
		35,0,0,379,378,1,0,0,0,379,380,1,0,0,0,380,382,1,0,0,0,381,383,5,45,0,
		0,382,381,1,0,0,0,382,383,1,0,0,0,383,406,1,0,0,0,384,386,7,0,0,0,385,
		384,1,0,0,0,386,387,1,0,0,0,387,385,1,0,0,0,387,388,1,0,0,0,388,407,1,
		0,0,0,389,390,5,48,0,0,390,400,7,1,0,0,391,392,5,36,0,0,392,400,5,37,0,
		0,393,394,5,36,0,0,394,400,5,38,0,0,395,396,5,36,0,0,396,400,5,35,0,0,
		397,398,5,36,0,0,398,400,5,36,0,0,399,389,1,0,0,0,399,391,1,0,0,0,399,
		393,1,0,0,0,399,395,1,0,0,0,399,397,1,0,0,0,400,402,1,0,0,0,401,403,3,
		149,74,0,402,401,1,0,0,0,403,404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,
		0,405,407,1,0,0,0,406,385,1,0,0,0,406,399,1,0,0,0,407,122,1,0,0,0,408,
		412,7,2,0,0,409,411,7,3,0,0,410,409,1,0,0,0,411,414,1,0,0,0,412,410,1,
		0,0,0,412,413,1,0,0,0,413,124,1,0,0,0,414,412,1,0,0,0,415,417,3,141,70,
		0,416,415,1,0,0,0,416,417,1,0,0,0,417,418,1,0,0,0,418,420,5,34,0,0,419,
		421,3,143,71,0,420,419,1,0,0,0,420,421,1,0,0,0,421,422,1,0,0,0,422,423,
		5,34,0,0,423,126,1,0,0,0,424,426,3,129,64,0,425,424,1,0,0,0,426,427,1,
		0,0,0,427,425,1,0,0,0,427,428,1,0,0,0,428,128,1,0,0,0,429,432,8,4,0,0,
		430,432,3,131,65,0,431,429,1,0,0,0,431,430,1,0,0,0,432,130,1,0,0,0,433,
		438,3,133,66,0,434,438,3,135,67,0,435,438,3,137,68,0,436,438,3,139,69,
		0,437,433,1,0,0,0,437,434,1,0,0,0,437,435,1,0,0,0,437,436,1,0,0,0,438,
		132,1,0,0,0,439,440,5,92,0,0,440,441,7,5,0,0,441,134,1,0,0,0,442,443,5,
		92,0,0,443,445,3,151,75,0,444,446,3,151,75,0,445,444,1,0,0,0,445,446,1,
		0,0,0,446,448,1,0,0,0,447,449,3,151,75,0,448,447,1,0,0,0,448,449,1,0,0,
		0,449,136,1,0,0,0,450,451,5,92,0,0,451,452,5,120,0,0,452,454,1,0,0,0,453,
		455,3,149,74,0,454,453,1,0,0,0,455,456,1,0,0,0,456,454,1,0,0,0,456,457,
		1,0,0,0,457,138,1,0,0,0,458,459,5,92,0,0,459,460,5,117,0,0,460,461,1,0,
		0,0,461,469,3,147,73,0,462,463,5,92,0,0,463,464,5,85,0,0,464,465,1,0,0,
		0,465,466,3,147,73,0,466,467,3,147,73,0,467,469,1,0,0,0,468,458,1,0,0,
		0,468,462,1,0,0,0,469,140,1,0,0,0,470,471,5,117,0,0,471,474,5,56,0,0,472,
		474,7,6,0,0,473,470,1,0,0,0,473,472,1,0,0,0,474,142,1,0,0,0,475,477,3,
		145,72,0,476,475,1,0,0,0,477,478,1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,
		0,479,144,1,0,0,0,480,488,8,7,0,0,481,488,3,131,65,0,482,483,5,92,0,0,
		483,488,5,10,0,0,484,485,5,92,0,0,485,486,5,13,0,0,486,488,5,10,0,0,487,
		480,1,0,0,0,487,481,1,0,0,0,487,482,1,0,0,0,487,484,1,0,0,0,488,146,1,
		0,0,0,489,490,3,149,74,0,490,491,3,149,74,0,491,492,3,149,74,0,492,493,
		3,149,74,0,493,148,1,0,0,0,494,495,7,8,0,0,495,150,1,0,0,0,496,497,7,9,
		0,0,497,152,1,0,0,0,498,500,7,10,0,0,499,498,1,0,0,0,500,501,1,0,0,0,501,
		499,1,0,0,0,501,502,1,0,0,0,502,503,1,0,0,0,503,504,6,76,0,0,504,154,1,
		0,0,0,505,509,5,59,0,0,506,508,8,11,0,0,507,506,1,0,0,0,508,511,1,0,0,
		0,509,507,1,0,0,0,509,510,1,0,0,0,510,512,1,0,0,0,511,509,1,0,0,0,512,
		513,6,77,0,0,513,156,1,0,0,0,25,0,335,357,376,379,382,387,399,404,406,
		412,416,420,427,431,437,445,448,456,468,473,478,487,501,509,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
