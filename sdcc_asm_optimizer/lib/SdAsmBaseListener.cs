//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./SdAsm.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISdAsmListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SdAsmBaseListener : ISdAsmListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.asmFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsmFile([NotNull] SdAsmParser.AsmFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.asmFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsmFile([NotNull] SdAsmParser.AsmFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.codeLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeLine([NotNull] SdAsmParser.CodeLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.codeLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeLine([NotNull] SdAsmParser.CodeLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirective([NotNull] SdAsmParser.DirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirective([NotNull] SdAsmParser.DirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.moduleName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleName([NotNull] SdAsmParser.ModuleNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.moduleName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleName([NotNull] SdAsmParser.ModuleNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.sdccOpts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSdccOpts([NotNull] SdAsmParser.SdccOptsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.sdccOpts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSdccOpts([NotNull] SdAsmParser.SdccOptsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.segment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSegment([NotNull] SdAsmParser.SegmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.segment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSegment([NotNull] SdAsmParser.SegmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.segmentSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSegmentSpec([NotNull] SdAsmParser.SegmentSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.segmentSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSegmentSpec([NotNull] SdAsmParser.SegmentSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.bootAddr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBootAddr([NotNull] SdAsmParser.BootAddrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.bootAddr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBootAddr([NotNull] SdAsmParser.BootAddrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.memoryAlloc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemoryAlloc([NotNull] SdAsmParser.MemoryAllocContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.memoryAlloc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemoryAlloc([NotNull] SdAsmParser.MemoryAllocContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.memoryData"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemoryData([NotNull] SdAsmParser.MemoryDataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.memoryData"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemoryData([NotNull] SdAsmParser.MemoryDataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] SdAsmParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] SdAsmParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] SdAsmParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] SdAsmParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] SdAsmParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] SdAsmParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.absAddrAllocExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbsAddrAllocExpr([NotNull] SdAsmParser.AbsAddrAllocExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.absAddrAllocExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbsAddrAllocExpr([NotNull] SdAsmParser.AbsAddrAllocExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruction([NotNull] SdAsmParser.InstructionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.instruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruction([NotNull] SdAsmParser.InstructionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressions([NotNull] SdAsmParser.ExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressions([NotNull] SdAsmParser.ExpressionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] SdAsmParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] SdAsmParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperand([NotNull] SdAsmParser.OperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperand([NotNull] SdAsmParser.OperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] SdAsmParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] SdAsmParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.arithmeticOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticOperator([NotNull] SdAsmParser.ArithmeticOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.arithmeticOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticOperator([NotNull] SdAsmParser.ArithmeticOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOperator([NotNull] SdAsmParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOperator([NotNull] SdAsmParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] SdAsmParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] SdAsmParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.bitOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitOperator([NotNull] SdAsmParser.BitOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.bitOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitOperator([NotNull] SdAsmParser.BitOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.compareOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOperator([NotNull] SdAsmParser.CompareOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.compareOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOperator([NotNull] SdAsmParser.CompareOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.logicalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOperator([NotNull] SdAsmParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.logicalOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOperator([NotNull] SdAsmParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.normalLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNormalLabel([NotNull] SdAsmParser.NormalLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.normalLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNormalLabel([NotNull] SdAsmParser.NormalLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SdAsmParser.inlineLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInlineLabel([NotNull] SdAsmParser.InlineLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SdAsmParser.inlineLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInlineLabel([NotNull] SdAsmParser.InlineLabelContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
